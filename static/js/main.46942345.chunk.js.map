{"version":3,"sources":["graphql/mutations.js","components/AddSong.js","components/Header.js","graphql/subscriptions.js","components/SongList.js","components/QueuedSongList.js","graphql/queries.js","components/SongPlayer.js","reducer.js","App.js","theme.js","graphql/client.js","index.js"],"names":["ADD_OR_REMOVE_FROM_QUEUE","gql","ADD_SONG","useStyles","makeStyles","theme","container","display","alignItems","urlInput","margin","spacing","addSongButton","dialog","textAlign","thumbnail","width","DEFAULT_SONG","duration","title","artist","AddSong","classes","useMutation","addSong","error","React","useState","url","setUrl","playable","setPlayable","setDialog","song","setSong","handleChangeSong","event","target","name","value","prevSong","handleCloseDialog","a","player","nestedPlayer","getVideoData","songData","getYouTubeInfo","getCurrentSound","getSoundCloudInfo","getDuration","video_id","author","Promise","resolve","Number","user","username","artwork_url","replace","variables","length","console","handleError","field","networkError","extensions","path","includes","useEffect","isPlayable","SoundCloudPlayer","canPlay","YouTubePlayer","dir","className","Dialog","open","onClose","DialogTitle","DialogContent","src","alt","TextField","onChange","label","fullWidth","helperText","DialogActions","Button","onClick","color","variant","placeholder","type","InputProps","startAdornment","InputAdornment","position","Link","disabled","endIcon","AddBoxOutlined","hidden","onReady","marginLeft","Header","AppBar","Toolbar","Typography","component","GET_SONGS","songInfoContainer","alignItmes","songInfo","justifyContent","objectFit","height","Song","id","onCompleted","data","localStorage","setItem","JSON","stringify","addOrRemoveFromQueue","useContext","SongContext","state","dispatch","currentSongPlaying","setCurrentSongPlaying","isSongPlaying","isPlaying","Card","CardMedia","image","CardContent","gutterbottom","CardActions","IconButton","size","payload","Pause","PlayArrow","input","__typename","Save","SongList","useSubscription","loading","style","flexDirection","marginTop","CircularProgress","songs","map","gridAutoFlow","gridTemplateColumns","gridGap","avatar","overflow","whiteSpace","text","textOverflow","QueuedSong","Avatar","Delete","QueuedSongList","queue","useMediaQuery","breakpoints","up","i","GET_QUEUED_SONGS","details","padding","content","flex","controls","paddingLeft","paddingRight","playIcon","SongPlayer","seconds","useQuery","reactPlayerRef","useRef","played","setPlayed","playedSeconds","setPlayedSeconds","seeking","setSeeking","positionInQueue","setPositionInQueue","songIndex","findIndex","nextSong","SkipPrevious","SkipNext","Date","toISOString","substr","Slider","onMouseDown","onMouseUp","current","seekTo","newValue","min","max","step","ref","onProgress","playing","songReducer","action","createContext","App","initialSongState","useReducer","greaterThanSm","greaterThanMd","Provider","Grid","paddingTop","item","xs","md","Hidden","only","right","top","bottom","createMuiTheme","palette","primary","blueGrey","secondary","deepOrange","client","ApolloClient","link","WebSocketLink","uri","options","reconnect","connectionParams","headers","cache","InMemoryCache","typeDefs","resolvers","Mutation","_","queryResult","readQuery","query","newQueue","some","filter","writeQuery","Boolean","getItem","parse","writeData","ReactDOM","render","ApolloProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.46942345.chunk.js","sourcesContent":["import { gql } from \"apollo-boost\";\n\nexport const ADD_OR_REMOVE_FROM_QUEUE = gql`\n  mutation addOrRemoveFromQueue($input: SongInput!) {\n    addOrRemoveFromQueue(input: $input) @client\n  }\n`;\n\nexport const ADD_SONG = gql`\n  mutation addSong(\n    $title: String!\n    $artist: String!\n    $thumbnail: String!\n    $duration: Float!\n    $url: String!\n  ) {\n    insert_songs(\n      objects: {\n        title: $title\n        artist: $artist\n        thumbnail: $thumbnail\n        duration: $duration\n        url: $url\n      }\n    ) {\n      affected_rows\n    }\n  }\n`;\n","import { useMutation } from \"@apollo/client\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  InputAdornment,\n  TextField,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { AddBoxOutlined, Link } from \"@material-ui/icons\";\nimport React from \"react\";\nimport ReactPlayer from \"react-player\";\nimport SoundCloudPlayer from \"react-player/soundcloud\";\nimport YouTubePlayer from \"react-player/youtube\";\nimport { ADD_SONG } from \"../graphql/mutations\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  urlInput: {\n    margin: theme.spacing(1),\n  },\n  addSongButton: {\n    margin: theme.spacing(1),\n  },\n  dialog: {\n    textAlign: \"center\",\n  },\n  thumbnail: {\n    width: \"90%\",\n  },\n}));\n\nconst DEFAULT_SONG = {\n  duration: 0,\n  title: \"\",\n  artist: \"\",\n  thumbnail: \"\",\n};\n\nfunction AddSong() {\n  const classes = useStyles();\n  const [addSong, { error }] = useMutation(ADD_SONG);\n  const [url, setUrl] = React.useState(\"\");\n  const [playable, setPlayable] = React.useState(false);\n  const [dialog, setDialog] = React.useState(false);\n  const [song, setSong] = React.useState(DEFAULT_SONG);\n\n  React.useEffect(() => {\n    const isPlayable =\n      SoundCloudPlayer.canPlay(url) || YouTubePlayer.canPlay(url);\n    setPlayable(isPlayable);\n  }, [url]);\n\n  function handleChangeSong(event) {\n    const { name, value } = event.target;\n    setSong((prevSong) => ({\n      ...prevSong,\n      [name]: value,\n    }));\n  }\n\n  function handleCloseDialog() {\n    setDialog(false);\n  }\n\n  async function handleEditSong({ player }) {\n    const nestedPlayer = player.player.player;\n    let songData;\n    if (nestedPlayer.getVideoData) {\n      songData = getYouTubeInfo(nestedPlayer);\n    } else if (nestedPlayer.getCurrentSound) {\n      songData = await getSoundCloudInfo(nestedPlayer);\n    }\n    setSong({ ...songData, url });\n  }\n\n  function getYouTubeInfo(player) {\n    const duration = player.getDuration();\n    const { title, video_id, author } = player.getVideoData();\n    const thumbnail = `https://img.youtube.com/vi/${video_id}/0.jpg`;\n    return {\n      duration,\n      title,\n      artist: author,\n      thumbnail,\n    };\n  }\n\n  function getSoundCloudInfo(player) {\n    return new Promise((resolve) => {\n      player.getCurrentSound((songData) => {\n        if (songData) {\n          resolve({\n            duration: Number(songData.duration / 1000),\n            title: songData.title,\n            artist: songData.user.username,\n            thumbnail: songData.artwork_url.replace(\"-large\", \"-t500x500\"),\n          });\n        }\n      });\n    });\n  }\n\n  async function handleAddSong() {\n    try {\n      const { url, duration, title, artist, thumbnail } = song;\n      await addSong({\n        variables: {\n          url: url.length > 0 ? url : null,\n          duration: duration > 0 ? duration : null,\n          title: title.length > 0 ? title : null,\n          artist: artist.length > 0 ? artist : null,\n          thumbnail: thumbnail.length > 0 ? thumbnail : null,\n        },\n      });\n      handleCloseDialog();\n      setSong(DEFAULT_SONG);\n      setUrl(\"\");\n    } catch (error) {\n      console.error(\"Error adding song\", error);\n    }\n  }\n\n  function handleError(field) {\n    return error?.networkError?.extensions?.path.includes(field);\n  }\n\n  const { thumbnail, title, artist } = song;\n  console.dir(error);\n  return (\n    <div className={classes.container}>\n      <Dialog\n        className={classes.dialog}\n        open={dialog}\n        onClose={handleCloseDialog}\n      >\n        <DialogTitle>Edit Song</DialogTitle>\n        <DialogContent>\n          <img\n            className={classes.thumbnail}\n            src={thumbnail}\n            alt=\"Song Thumbnail\"\n          />\n          <TextField\n            value={title}\n            onChange={handleChangeSong}\n            margin=\"dense\"\n            name=\"title\"\n            label=\"Title\"\n            fullWidth\n            error={handleError(\"title\")}\n            helperText={handleError(\"title\") && \"Fill out field\"}\n          />\n          <TextField\n            value={artist}\n            onChange={handleChangeSong}\n            margin=\"dense\"\n            name=\"artist\"\n            label=\"Artist\"\n            fullWidth\n            error={handleError(\"artist\")}\n            helperText={handleError(\"artist\") && \"Fill out field\"}\n          />\n          <TextField\n            value={thumbnail}\n            onChange={handleChangeSong}\n            margin=\"dense\"\n            name=\"thumbnail\"\n            label=\"Thumbnail\"\n            fullWidth\n            error={handleError(\"thumbnail\")}\n            helperText={handleError(\"thumbnail\") && \"Fill out field\"}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button color=\"primary\" variant=\"outlined\" onClick={handleAddSong}>\n            Add Song\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <TextField\n        className={classes.urlInput}\n        onChange={(event) => setUrl(event.target.value)}\n        value={url}\n        placeholder=\"Add YouTube or SoundCloud URL\"\n        fullWidth\n        margin=\"normal\"\n        variant=\"outlined\"\n        type=\"url\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <Link />\n            </InputAdornment>\n          ),\n        }}\n      />\n      <Button\n        disabled={!playable}\n        className={classes.addSongButton}\n        onClick={() => setDialog(true)}\n        variant=\"contained\"\n        color=\"primary\"\n        endIcon={<AddBoxOutlined />}\n      >\n        Add\n      </Button>\n      <ReactPlayer url={url} hidden onReady={handleEditSong} />\n    </div>\n  );\n}\n\nexport default AddSong;\n","import { AppBar, Toolbar, Typography, makeStyles } from \"@material-ui/core\";\nimport HeadsetTwoToneIcon from \"@material-ui/icons/HeadsetTwoTone\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nfunction Header() {\n  const classes = useStyles();\n\n  return (\n    <AppBar color=\"primary\" position=\"fixed\">\n      <Toolbar>\n        <HeadsetTwoToneIcon />\n        <Typography className={classes.title} variant=\"h6\" component=\"h1\">\n          Apollo Music Share\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import { gql } from \"apollo-boost\";\n\nexport const GET_SONGS = gql`\n  subscription getSongs {\n    songs(order_by: { created_at: desc }) {\n      url\n      title\n      thumbnail\n      id\n      duration\n      artist\n    }\n  }\n`;\n","import { useMutation, useSubscription } from \"@apollo/client\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  CircularProgress,\n  IconButton,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { Pause, PlayArrow, Save } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { SongContext } from \"../App\";\nimport { ADD_OR_REMOVE_FROM_QUEUE } from \"../graphql/mutations\";\nimport { GET_SONGS } from \"../graphql/subscriptions\";\n\nfunction SongList() {\n  const { data, loading, error } = useSubscription(GET_SONGS);\n\n  if (loading) {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          marginTop: 50,\n        }}\n      >\n        <CircularProgress />\n      </div>\n    );\n  }\n  if (error) {\n    console.dir(error);\n    return <div>Error fetching songs</div>;\n  }\n\n  return (\n    <div>\n      <h2>\n        {data.songs.map((song) => (\n          <Song key={song.id} song={song} />\n        ))}\n      </h2>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    margin: theme.spacing(3),\n  },\n  songInfoContainer: {\n    display: \"flex\",\n    alignItmes: \"center\",\n  },\n  songInfo: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  thumbnail: {\n    objectFit: \"cover\",\n    width: 140,\n    height: 140,\n  },\n}));\n\nfunction Song({ song }) {\n  const { id } = song;\n  const classes = useStyles();\n  const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\n    onCompleted: (data) => {\n      localStorage.setItem(\"queue\", JSON.stringify(data.addOrRemoveFromQueue));\n    },\n  });\n  const { state, dispatch } = React.useContext(SongContext);\n  const [currentSongPlaying, setCurrentSongPlaying] = React.useState(false);\n  const { title, artist, thumbnail } = song;\n\n  React.useEffect(() => {\n    const isSongPlaying = state.isPlaying && id === state.song.id;\n    setCurrentSongPlaying(isSongPlaying);\n  }, [id, state.song.id, state.isPlaying]);\n\n  function handleTogglePlay() {\n    dispatch({ type: \"SET_SONG\", payload: { song } });\n    dispatch(state.isPlaying ? { type: \"PAUSE_SONG\" } : { type: \"PLAY_SONG\" });\n  }\n\n  function handleAddOrRemoveFromQueue() {\n    addOrRemoveFromQueue({\n      variables: { input: { ...song, __typename: \"Song\" } },\n    });\n  }\n\n  return (\n    <Card className={classes.container}>\n      <div className={classes.songInfoContainer}>\n        <CardMedia className={classes.thumbnail} image={thumbnail} />\n        <div className={classes.songInfo}>\n          <CardContent>\n            <Typography gutterbottom=\"true\" variant=\"h5\" component=\"h2\">\n              {title}\n            </Typography>\n            <Typography variant=\"body1\" component=\"p\" color=\"textSecondary\">\n              {artist}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <IconButton size=\"small\" color=\"primary\" onClick={handleTogglePlay}>\n              {currentSongPlaying ? <Pause /> : <PlayArrow />}\n            </IconButton>\n            <IconButton\n              size=\"small\"\n              color=\"secondary\"\n              onClick={handleAddOrRemoveFromQueue}\n            >\n              <Save />\n            </IconButton>\n          </CardActions>\n        </div>\n      </div>\n    </Card>\n  );\n}\n\nexport default SongList;\n","import { useMutation } from \"@apollo/client\";\nimport {\n  Avatar,\n  IconButton,\n  makeStyles,\n  Typography,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport { Delete } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { ADD_OR_REMOVE_FROM_QUEUE } from \"../graphql/mutations\";\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"grid\",\n    gridAutoFlow: \"column\",\n    gridTemplateColumns: \"50px auto 50px\",\n    gridGap: 12,\n    alignItems: \"center\",\n    marginTop: 10,\n  },\n  avatar: {\n    width: 44,\n    height: 44,\n  },\n  songInfoContainer: {\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n  },\n  text: {\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\",\n  },\n});\n\nfunction QueuedSong({ song }) {\n  const classes = useStyles();\n  const [addOrRemoveFromQueue] = useMutation(ADD_OR_REMOVE_FROM_QUEUE, {\n    onCompleted: (data) => {\n      localStorage.setItem(\"queue\", JSON.stringify(data.addOrRemoveFromQueue));\n    },\n  });\n  const { thumbnail, artist, title } = song;\n\n  function handleAddOrRemoveFromQueue() {\n    addOrRemoveFromQueue({\n      variables: { input: { ...song, __typename: \"Song\" } },\n    });\n  }\n\n  return (\n    <div className={classes.container}>\n      <Avatar className={classes.avatar} src={thumbnail} alt=\"Song Thumbnail\" />\n      <div className={classes.songInfoContainer}>\n        <Typography className={classes.text} variant=\"subtitle2\">\n          {title}\n        </Typography>\n        <Typography\n          className={classes.text}\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >\n          {artist}\n        </Typography>\n      </div>\n      <IconButton onClick={handleAddOrRemoveFromQueue}>\n        <Delete color=\"error\" />\n      </IconButton>\n    </div>\n  );\n}\n\nfunction QueuedSongList({ queue }) {\n  const greaterThanMd = useMediaQuery((theme) => theme.breakpoints.up(\"md\"));\n\n  /* const song = {\n    title: \"Talking to the Moon (Bruno Mars Remix)\",\n    artist: \"Sickick\",\n    thumbnail: \"https://img.youtube.com/vi/00F1PQH-MQ8/0.jpg\",\n  }; */\n\n  return (\n    greaterThanMd && (\n      <div style={{ margin: \"10px 0\" }}>\n        <Typography color=\"textSecondary\" variant=\"button\">\n          Queue ({queue.length})\n        </Typography>\n        {queue.map((song, i) => (\n          <QueuedSong key={i} song={song} />\n        ))}\n      </div>\n    )\n  );\n}\n\nexport default QueuedSongList;\n","import { gql } from \"apollo-boost\";\n\nexport const GET_QUEUED_SONGS = gql`\n  query GET_QUEUED_SONGS {\n    queue @client {\n      id\n      duration\n      title\n      artist\n      thumbnail\n      url\n    }\n  }\n`;\n","import {\n  Card,\n  CardContent,\n  CardMedia,\n  IconButton,\n  makeStyles,\n  Slider,\n  Typography,\n} from \"@material-ui/core\";\nimport { Pause, PlayArrow, SkipNext, SkipPrevious } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { SongContext } from \"../App\";\nimport QueuedSongList from \"./QueuedSongList\";\nimport { GET_QUEUED_SONGS } from \"../graphql/queries\";\nimport { useQuery } from \"@apollo/client\";\nimport ReactPlayer from \"react-player\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"0px 15px\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  thumbnail: {\n    width: 150,\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n  },\n  playIcon: {\n    height: 38,\n    width: 38,\n  },\n}));\n\nfunction SongPlayer() {\n  const { data } = useQuery(GET_QUEUED_SONGS);\n  const reactPlayerRef = React.useRef();\n  const { state, dispatch } = React.useContext(SongContext);\n  const [played, setPlayed] = React.useState(0);\n  const [playedSeconds, setPlayedSeconds] = React.useState(0);\n  const [seeking, setSeeking] = React.useState(false);\n  const [positionInQueue, setPositionInQueue] = React.useState(0);\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    const songIndex = data.queue.findIndex((song) => song.id === state.song.id);\n    setPositionInQueue(songIndex);\n  }, [data.queue, state.song.id]);\n\n  React.useEffect(() => {\n    const nextSong = data.queue[positionInQueue + 1];\n    if (played >= 0.99 && nextSong) {\n      setPlayed(0);\n      dispatch({ type: \"SET_SONG\", payload: { song: nextSong } });\n    }\n  }, [data.queue, positionInQueue, played, dispatch]);\n\n  function handleTogglePlay() {\n    dispatch(state.isPlaying ? { type: \"PAUSE_SONG\" } : { type: \"PLAY_SONG\" });\n  }\n\n  function handleProgressChange(event, newValue) {\n    setPlayed(newValue);\n  }\n\n  function handleSeekMouseDown() {\n    setSeeking(true);\n  }\n\n  function handleSeekMouseUp() {\n    setSeeking(false);\n    reactPlayerRef.current.seekTo(played);\n  }\n\n  function formatDuration(seconds) {\n    return new Date(seconds * 1000).toISOString().substr(11, 8);\n  }\n\n  function handlePlayPreviousSong() {\n    const prevSong = data.queue[positionInQueue - 1];\n    if (prevSong) {\n      dispatch({ type: \"SET_SONG\", payload: { song: prevSong } });\n    }\n  }\n\n  function handlePlayNextSong() {\n    const nextSong = data.queue[positionInQueue + 1];\n    if (nextSong) {\n      dispatch({ type: \"SET_SONG\", payload: { song: nextSong } });\n    }\n  }\n\n  return (\n    <>\n      <Card variant=\"outlined\" className={classes.container}>\n        <div className={classes.details}>\n          <CardContent className={classes.content}>\n            <Typography variant=\"h5\" component=\"h3\">\n              {state.song.title}\n            </Typography>\n            <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\n              {state.song.artist}\n            </Typography>\n          </CardContent>\n          <div className={classes.controls}>\n            <IconButton onClick={handlePlayPreviousSong}>\n              <SkipPrevious />\n            </IconButton>\n            <IconButton onClick={handleTogglePlay}>\n              {state.isPlaying ? (\n                <Pause className={classes.playIcon} />\n              ) : (\n                <PlayArrow className={classes.playIcon} />\n              )}\n            </IconButton>\n            <IconButton onClick={handlePlayNextSong}>\n              <SkipNext />\n            </IconButton>\n            <Typography variant=\"subtitle1\" component=\"p\" color=\"textSecondary\">\n              {formatDuration(playedSeconds)}\n            </Typography>\n          </div>\n          <Slider\n            onMouseDown={handleSeekMouseDown}\n            onMouseUp={handleSeekMouseUp}\n            onChange={handleProgressChange}\n            value={played}\n            type=\"range\"\n            min={0}\n            max={1}\n            step={0.01}\n          />\n        </div>\n        <ReactPlayer\n          ref={reactPlayerRef}\n          onProgress={({ played, playedSeconds }) => {\n            if (!seeking) {\n              setPlayed(played);\n              setPlayedSeconds(playedSeconds);\n            }\n          }}\n          url={state.song.url}\n          playing={state.isPlaying}\n          hidden\n        />\n        <CardMedia className={classes.thumbnail} image={state.song.thumbnail} />\n      </Card>\n      <QueuedSongList queue={data.queue} />\n    </>\n  );\n}\n\nexport default SongPlayer;\n","function songReducer(state, action) {\n  switch (action.type) {\n    case \"SET_SONG\": {\n      return {\n        ...state,\n        song: action.payload.song,\n      };\n    }\n    case \"PLAY_SONG\": {\n      return {\n        ...state,\n        isPlaying: true,\n      };\n    }\n    case \"PAUSE_SONG\": {\n      return {\n        ...state,\n        isPlaying: false,\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default songReducer;\n","import { Grid, Hidden, useMediaQuery } from \"@material-ui/core\";\nimport React from \"react\";\nimport AddSong from \"./components/AddSong\";\nimport Header from \"./components/Header\";\nimport SongList from \"./components/SongList\";\nimport SongPlayer from \"./components/SongPlayer\";\nimport songReducer from \"./reducer\";\n\nexport const SongContext = React.createContext({\n  song: {\n    id: \"a49b4840-59e6-45c4-98b7-671873988b80\",\n    title: \"Superposition\",\n    artist: \"Young the Giant\",\n    thumbnail: \"https://img.youtube.com/vi/QxJhrwyn0M4/0.jpg\",\n    url: \"https://www.youtube.com/watch?v=QxJhrwyn0M4\",\n    duration: 232,\n  },\n  isPlaying: false,\n});\n\nfunction App() {\n  const initialSongState = React.useContext(SongContext);\n  const [state, dispatch] = React.useReducer(songReducer, initialSongState);\n  const greaterThanSm = useMediaQuery((theme) => theme.breakpoints.up(\"sm\"));\n  const greaterThanMd = useMediaQuery((theme) => theme.breakpoints.up(\"md\"));\n  return (\n    <SongContext.Provider value={{ state, dispatch }}>\n      <Grid container spacing={3}>\n        <Grid\n          style={{\n            paddingTop: greaterThanSm ? \"80px\" : \"10px\",\n          }}\n          item\n          xs={12}\n          md={7}\n        >\n          <Hidden only=\"xs\">\n            <Header />\n          </Hidden>\n          <AddSong />\n          <SongList />\n        </Grid>\n        <Grid\n          style={\n            greaterThanMd\n              ? {\n                  position: \"fixed\",\n                  width: \"100%\",\n                  right: 0,\n                  top: \"65px\",\n                }\n              : {\n                  position: \"fixed\",\n                  width: \"100%\",\n                  bottom: 0,\n                }\n          }\n          item\n          xs={12}\n          md={5}\n        >\n          <SongPlayer />\n        </Grid>\n      </Grid>\n    </SongContext.Provider>\n  );\n}\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core\";\nimport { blueGrey, deepOrange } from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: blueGrey,\n    secondary: deepOrange,\n  },\n});\n\nexport default theme;\n","import ApolloClient from \"apollo-client\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { gql } from \"apollo-boost\";\nimport { GET_QUEUED_SONGS } from \"./queries\";\n// import { ApolloClient, InMemoryCache } from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  link: new WebSocketLink({\n    uri: \"wss://apollo-tunes-share.hasura.app/v1/graphql\",\n    options: {\n      reconnect: true,\n      connectionParams: {\n        headers: {\n          \"x-hasura-admin-secret\":\n            \"6Aaz3fUJMDTtHZZe0LzSZLlhN1MJ5e2UVXh4bed12mbuKvD966325mv9kLihDumI\",\n        },\n      },\n    },\n  }),\n  cache: new InMemoryCache(),\n  typeDefs: gql`\n    type Song {\n      id: uuid!\n      title: String!\n      artist: String!\n      thumbnail: String!\n      duration: Float!\n      url: String!\n    }\n    input SongInput {\n      id: uuid!\n      title: String!\n      artist: String!\n      thumbnail: String!\n      duration: Float!\n      url: String!\n    }\n    type Query {\n      queue: [Song]!\n    }\n    type Mutation {\n      addOrRemoveFromQueue(input: SongInput!): [Song]!\n    }\n  `,\n  resolvers: {\n    Mutation: {\n      addOrRemoveFromQueue: (_, { input }, { cache }) => {\n        const queryResult = cache.readQuery({\n          query: GET_QUEUED_SONGS,\n        });\n        if (queryResult) {\n          const { queue } = queryResult;\n          const isInQueue = queue.some((song) => song.id === input.id);\n          const newQueue = isInQueue\n            ? queue.filter((song) => song.id !== input.id)\n            : [...queue, input];\n          cache.writeQuery({\n            query: GET_QUEUED_SONGS,\n            data: { queue: newQueue },\n          });\n          return newQueue;\n        }\n        return [];\n      },\n    },\n  },\n});\n\nconst hasQueue = Boolean(localStorage.getItem(\"queue\"));\n\nconst data = {\n  queue: hasQueue ? JSON.parse(localStorage.getItem(\"queue\")) : [],\n};\n/* const client = new ApolloClient({\n    cache: new InMemoryCache(),\n    uri: \"https://apollo-tunes-share.hasura.app/v1/graphql\",\n    headers: {\n        \"x-hasura-admin-secret\":\n          \"6Aaz3fUJMDTtHZZe0LzSZLlhN1MJ5e2UVXh4bed12mbuKvD966325mv9kLihDumI\",\n      },\n}); */\nclient.writeData({ data });\n\nexport default client;\n","import { CssBaseline, MuiThemeProvider } from \"@material-ui/core\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ApolloProvider } from \"@apollo/client\"\nimport theme from \"./theme\";\nimport client from \"./graphql/client\"\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </MuiThemeProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}